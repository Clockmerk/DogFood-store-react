/* eslint-disable prettier/prettier */
import styles from "./productcard.module.css";
import { Navigate, useParams } from "react-router-dom";
import { useQuery } from "@tanstack/react-query";
import { fetchProduct } from "../../api/products";
import { useAppSelector } from "../../redux/store";
import { useDispatch } from "react-redux";
import { setCart } from "../../redux/slices/cartSlice";
import { changeFavoriteStatus } from "../../redux/slices/favoritesSlices";

export const CurrentCard = () => {
  const { token } = useAppSelector((state) => state.user);
  const { productId } = useParams();
  const favorites = useAppSelector((state) => state.favorites);
  const dispatch = useDispatch();

  if (!token) return <Navigate to="/auth" />;

  if (!productId) return null;

  const { isSuccess, data } = useQuery({
    queryKey: ["productData"],
    queryFn: () => fetchProduct(productId, token),
  });

  if (isSuccess && !data.name) {
    return (
      <div className={styles.current_card}>
        <p>
          –¢–∞–∫–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –õ–∏–±–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞,
          –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ
        </p>
      </div>
    );
  }

  if (isSuccess) {
    document.title = `${data.name} DogFooDStore`;
    return (
      <div className={styles.current_card_container}>
        <div className={styles.current_card}>
          <img src={data.pictures}></img>
          <div>
            <p>
              <b>{data.name}</b>
            </p>
            <p>–û–ø–∏—Å–∞–Ω–∏–µ: {data.description}</p>
            <p>–¶–µ–Ω–∞: {data.price}</p>
            <p>
              –¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π {data.discount}% ={" "}
              <b>{data.price - (data.price * data.discount) / 100}</b>
            </p>
            <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–ª–∏—á–∏–∏: {data.stock}</p>
            <p>–ü—Ä–æ–¥—É–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω: {data.updated_at}</p>
          </div>
          {data.available ? (
            <button onClick={() => dispatch(setCart(data._id))}>
              –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É üß∫
            </button>
          ) : (
            <button disabled>–¢–æ–≤–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</button>
          )}
          <button onClick={()=> dispatch(changeFavoriteStatus(data._id))}>{favorites.find(id => id == data._id) ? <span>‚ù§Ô∏è</span> : <span>‚ô°</span> }</button>
          <button>üëçüñí</button>
        </div>
      </div>
    );
  }
  return (
    <div className={styles.current_card}>
      <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
    </div>
  );
};
